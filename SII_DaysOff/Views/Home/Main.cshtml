@using Microsoft.AspNetCore.Identity
@using SII_DaysOff.Areas.Identity.Data
@using SII_DaysOff.Data

@model MainViewModel

@inject UserManager<ApplicationUser> UserManager

@{
	ViewData["notShow"] = false;
	ViewData["title"] = "Main";
}

@Html.Partial("../Components/ModalCreateRequest", new SII_DaysOff.Models.Requests())


<h1 class="mx-4 mt-4">Days Off</h1>

<div class="card my-4 mx-4">
	<div class="card-header bg-light">
		<form asp-controller="Home" asp-action="Main" method="post">
			<div class="row">
				<div class="col-12 col-xxl-10 col-xl-10 col-lg-10 col-md-9 col-sm-10 mb-2">
					<span class="fw-bolder">Time off balance in 2024</span>
				</div>
				<div class="col-6 col-xxl-2 col-xl-2 col-lg-2 col-md-3 col-sm-2 d-flex justify-content-end">
					<div class="form-group">
						<input type="number" class="form-control custom-button" min="2000" max="2050" id="yearPicker" name="year" value="@ViewData["YearSelected"]" readonly />
					</div>
					<button type="submit" class="custom-button"><i class="bi bi-arrow-return-right"></i></button>
				</div>

			</div>
		</form>
	</div>
	<div class="card-body shadow">
		<div class="row text-center">
			@if (Model.User != null)
			{
				<div class="col-6 col-sm-2">
					<p class="fw-bold">Annual days off</p>
					<p>@Model.User.UserVacationDays.YearNavigation.DayVacations</p>
				</div>
				<div class="col-6 col-sm-2">
					<p class="fw-bold">Additional days</p>
					<p>@Model.User.UserVacationDays.AdditionalDays</p>
				</div>
				<div class="col-6 col-sm-2">
					<p class="fw-bold">Acquired days</p>
					<p>@Model.User.UserVacationDays.AcquiredDays</p>
				</div>
				<div class="col-6 col-sm-2">
					<p class="fw-bold">Remaining days</p>
					@{
						int totalDays = Model.User.UserVacationDays.YearNavigation.DayVacations;
						int acquiredDays = Model.User.UserVacationDays.AcquiredDays;
						int additionalDays = Model.User.UserVacationDays.AdditionalDays;
						totalDays = (totalDays - acquiredDays) + additionalDays;
					}
					<p>@totalDays</p>
				</div>
				<div class="col-6 col-sm-2">
					<p class="fw-bold">Validity start date</p>
					@{
						if (Model.User.CreationDate.Year == int.Parse(Model.Year))
						{
							<p>@Model.User.CreationDate.ToString("yyyy-MM-dd")</p>
						}
						else
						{
							<p>@Model.User.UserVacationDays.Year-01-01</p>
						}
					}
				</div>
				<div class="col-6 col-sm-2">
					<p class="fw-bold">Validity end date</p>
					<p>@Model.User.UserVacationDays.Year-12-31</p>
				</div>
			}
		</div>
	</div>
</div>

<div class="card shadow my-4 mx-4">
	<div class="card-header bg-light">
		<div class="row">
			<div class="col-12 col-md-6 d-flex justify-content-start align-items-center fw-bolder mb-3">
				Requested time off
			</div>
			<div class="col-12 col-md-6 d-flex justify-content-end align-items-center ms-2 ms-md-0">
				@{
					var user = await UserManager.GetUserAsync(User);
					if (user != null)
					{
						if (user.RoleId.Equals(Model.AdminId))
						{
							if (ViewBag.pendingRequests > 0)
							{
								<a class="custom-button position-relative" asp-controller="Requests" asp-action="ManageIndex" asp-route-registerCount="11" asp-route-searchString="-1" asp-route-year="@ViewData["YearSelected"]">
									Manage request
									<span class="position-absolute top-0 start-0 translate-middle badge rounded-pill bg-danger">
										@ViewBag.pendingRequests
										<span class="visually-hidden">unread messages</span>
									</span>
								</a>
							}
							else
							{
								<a class="custom-button-disabled position-relative btn disabled" asp-controller="Requests" asp-action="ManageIndex" asp-route-registerCount="11" asp-route-searchString="-1">Manage requests</a>
							}
							<a type="submit" class="custom-button" asp-controller="Requests" asp-action="Calendar">Calendar</a>
						}
					}
				}
				<button type="submit" class="custom-button" data-bs-toggle="modal" data-bs-target="#exampleModal">New request</button>
			</div>
		</div>
	</div>

	<div class="row">
		<div class="col-12">
			<ul class="nav nav-tabs m-4">
				<li class="nav-item">
					<a class="nav-link custom-nav-link" aria-current="page" asp-controller="Home" asp-action="Main" asp-route-optionStatus="Pending" asp-route-year="@ViewData["YearSelected"]" asp-route-registerCount="@ViewData["RegisterCount"]"><i class="bi bi-clock-history"></i> Pending requests</a>
				</li>
				<li class="nav-item">
					<a class="nav-link custom-nav-link" asp-controller="Home" asp-action="Main" asp-route-optionStatus="Approved" asp-route-year="@ViewData["YearSelected"]" asp-route-registerCount="@ViewData["RegisterCount"]"><i class="bi bi-check-circle"></i> Approved requests</a>
				</li>
				<li class="nav-item">
					<a class="nav-link custom-nav-link" asp-controller="Home" asp-action="Main" asp-route-optionStatus="Cancelled" asp-route-year="@ViewData["YearSelected"]" asp-route-registerCount="@ViewData["RegisterCount"]"><i class="bi bi-dash-circle"></i> Cancelled requests</a>
				</li>
				<form asp-controller="Home" asp-action="Main">
					<div class="form-actions no-color">
						<p>
							<input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" class="custom-button">
							<input type="hidden" name="optionStatus" value="@ViewData["status"]" />
							<input type="hidden" name="year" value="@ViewData["YearSelected"]" />
							<input type="submit" value="Search" class="custom-button" /> |
							<a asp-action="Main" asp-route-year="@ViewData["YearSelected"]" asp-route-registerCount="@ViewData["RegisterCount"]" asp-route-optionStatus="@ViewData["status"]" class="mx-2 custom-link">Back to Full List</a> |
							<input type="number" min="1" max="10" name="registerCount" value="@ViewData["RegisterCount"]" class="custom-button">
							<label for="floatingInputValue" class="mx-2 custom-link">Results on page</label>
						</p>
					</div>
				</form>
			</ul>
		</div>
	</div>

	<div class="parent">
		<div class="card-body cardRequests">
			@if (!Model.Requests.Any())
			{
				<div class="row">
					<div class="col-12 d-flex justify-content-center">
						<i class="bi bi-file-earmark-excel-fill custom-icon"></i>
					</div>
				</div>
				<div class="row">
					<div class="col-12 d-flex justify-content-center">
						<p class="no-data-text">No data found. Add a line to submit data.</p>
					</div>
				</div>
			}
			else
			{
				<div class="row">
					<div class="col test">
						<ul class="list-group">
							<li class="list-group-item custom-list-group">
								<div class="row text-center">
									<div class="col fw-bold">
										<a asp-controller="Home" asp-action="Main" asp-route-sortOrder="@ViewData["ReasonOrder"]" asp-route-optionStatus="@ViewData["status"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-year="@ViewData["YearSelected"]" asp-route-registerCount="@ViewData["RegisterCount"]" asp-route-numPage="@Model.Requests.PageIndex" class="custom-filter-link" id="filter-link">Reason@*<i id="filter-icon" class="bi bi-caret-down mx-1"></i>*@</a>
									</div>
									<div class="col fw-bold">
										<a asp-controller="Home" asp-action="Main" asp-route-sortOrder="@ViewData["StartDayOrder"]" asp-route-optionStatus="@ViewData["status"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-year="@ViewData["YearSelected"]" asp-route-registerCount="@ViewData["RegisterCount"]" asp-route-numPage="@Model.Requests.PageIndex" class="custom-filter-link" id="filter-link">Start Date</a>
									</div>
									<div class="col fw-bold">
										<a asp-controller="Home" asp-action="Main" asp-route-sortOrder="@ViewData["HalfDayStartOrder"]" asp-route-optionStatus="@ViewData["status"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-year="@ViewData["YearSelected"]" asp-route-registerCount="@ViewData["RegisterCount"]" asp-route-numPage="@Model.Requests.PageIndex" class="custom-filter-link" id="filter-link">Is Half Day?</a>
									</div>
									<div class="col fw-bold">
										<a asp-controller="Home" asp-action="Main" asp-route-sortOrder="@ViewData["EndDayOrder"]" asp-route-optionStatus="@ViewData["status"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-year="@ViewData["YearSelected"]" asp-route-registerCount="@ViewData["RegisterCount"]" asp-route-numPage="@Model.Requests.PageIndex" class="custom-filter-link" id="filter-link">End Date</a>
									</div>
									<div class="col fw-bold">
										<a asp-controller="Home" asp-action="Main" asp-route-sortOrder="@ViewData["HalfDayEndOrder"]" asp-route-optionStatus="@ViewData["status"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-year="@ViewData["YearSelected"]" asp-route-registerCount="@ViewData["RegisterCount"]" asp-route-numPage="@Model.Requests.PageIndex" class="custom-filter-link" id="filter-link">Is Half Day?</a>
									</div>
									<div class="col fw-bold">
										<a asp-controller="Home" asp-action="Main" asp-route-sortOrder="@ViewData["RequestDayOrder"]" asp-route-optionStatus="@ViewData["status"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-year="@ViewData["YearSelected"]" asp-route-registerCount="@ViewData["RegisterCount"]" asp-route-numPage="@Model.Requests.PageIndex" class="custom-filter-link" id="filter-link">Request Date</a>
									</div>
									<div class="col fw-bold">
										<a asp-controller="Home" asp-action="Main" asp-route-sortOrder="@ViewData["CommentsOrder"]" asp-route-optionStatus="@ViewData["status"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-year="@ViewData["YearSelected"]" asp-route-registerCount="@ViewData["RegisterCount"]" asp-route-numPage="@Model.Requests.PageIndex" class="custom-filter-link" id="filter-link">Comments</a>
									</div>
									<div class="col fw-bold">
										<a asp-controller="Home" asp-action="Main" asp-route-sortOrder="@ViewData["StatusOrder"]" asp-route-optionStatus="@ViewData["status"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-year="@ViewData["YearSelected"]" asp-route-registerCount="@ViewData["RegisterCount"]" asp-route-numPage="@Model.Requests.PageIndex" class="custom-filter-link" id="filter-link">Status</a>
									</div>
									@if (Model.Requests.Count() != 0 && Model != null && Model.Requests.FirstOrDefault().Status.Name.Equals("Pending"))
									{
										<div class="col fw-bold">Edit/Delete</div>
									}
								</div>
							</li>

							@if (Model != null)
							{
								foreach (var item in Model.Requests)
								{
									<li class="list-group-item">
										<div class="row text-center">
											<div class="col d-flex justify-content-center align-items-center">@Html.DisplayFor(model => item.Reason.Name)</div>
											<div class="col d-flex justify-content-center align-items-center">@Html.DisplayFor(model => item.StartDate)</div>
											<div class="col d-flex justify-content-center align-items-center">
												@{
													if (item.HalfDayStart.Equals(true))
													{
														<i class="bi bi-check-square-fill"></i>
													}
													else
													{
														<i class="bi bi-x-square-fill"></i>
													}
												}
											</div>
											<div class="col d-flex justify-content-center align-items-center">@Html.DisplayFor(model => item.EndDate)</div>
											<div class="col d-flex justify-content-center align-items-center">
												@{
													if (item.HalfDayEnd.Equals(true))
													{
														<i class="bi bi-check-square-fill"></i>
													}
													else
													{
														<i class="bi bi-x-square-fill"></i>
													}
												}
											</div>
											<div class="col d-flex justify-content-center align-items-center">@Html.DisplayFor(model => item.RequestDate)</div>
											<div class="col d-flex justify-content-center align-items-center">@Html.DisplayFor(model => item.Comments)</div>
											<div class="col d-flex justify-content-center align-items-center">
												@if (item.Status.Name.Equals("Pending"))
												{
													<i class="bi bi-clock-history me-2 pending-icon"></i>
													<span class="pending-icon">@Html.DisplayFor(model => item.Status.Name)</span>
												}
												else if (item.Status.Name.Equals("Approved"))
												{
													<i class="bi bi-check-circle me-2 approved-icon my-2"></i>
													<span class="approved-icon">@Html.DisplayFor(model => item.Status.Name)</span>
												}
												else
												{
													<i class="bi bi-dash-circle me-2 cancelled-icon my-2"></i>
													<span class="cancelled-icon">@Html.DisplayFor(model => item.Status.Name)</span>
												}
											</div>
											@if (Model.Requests.Any() && Model != null && item.Status.Name.Equals("Pending"))
											{
												@Html.Partial("../Components/ModalEditRequest", item)
												@Html.Partial("../Components/ModalDeleteRequest", item)
												<div class="col">
													<a asp-controller="Requests" asp-action="Edit" asp-route-id="@item.RequestId" class="btn btn-unstyled custom-icon-edit"><i class="bi bi-pencil-square"></i></a>
													<a asp-controller="Requests" asp-action="Delete" asp-route-id="@item.RequestId" method="post" class="btn btn-unstyled custom-icon-delete"><i class="bi bi-trash-fill"></i></a>
												</div>
											}
										</div>
									</li>
								}
							}
						</ul>
					</div>
				</div>
			}
		</div>
	</div>

	@{
		var previousDisabled = !Model.Requests.HasPreviousPage ? "disabled" : "";
		var nextDisabled = !Model.Requests.HasNextPage ? "disabled" : "";
		//var registerCount = (int)ViewData["RegisterCount"];
	}

	<div class="card-footer py-3">
		<a asp-action="Main" asp-route-sortOrder="@ViewData["currentOrder"]"
		   asp-route-numPage="@(Model.Requests.PageIndex -1)" asp-route-currentFilter="@ViewData["CurrentFilter"]"
		   class="custom-button btn @previousDisabled" asp-route-optionStatus="@ViewData["Status"]" asp-route-year="@ViewData["YearSelected"]"
		   asp-route-registerCount="@ViewData["RegisterCount"]">Previous</a>

		@{
			int maxPageButtons = 3;
			int totalPages = Model.Requests.TotalPages;
			int currentPage = Model.Requests.PageIndex;
			int startPage = Math.Max(1, currentPage - maxPageButtons / 2);
			int endPage = Math.Min(totalPages, startPage + maxPageButtons - 1);

			if (startPage > 1)
			{
				<a asp-action="Main" asp-route-sortOrder="@ViewData["currentOrder"]"
				   asp-route-numPage="1" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="custom-button btn"
				   asp-route-optionStatus="@ViewData["Status"]" asp-route-year="@ViewData["YearSelected"]"
				   asp-route-registerCount="@ViewData["RegisterCount"]">1</a>
				if (startPage > 2)
				{
					<span class="custom-button btn">...</span>
				}
			}

			for (var i = startPage; i <= endPage; i++)
			{
				var activePage = (i == currentPage) ? "custom-button-active" : "";
				<a asp-action="Main" asp-route-sortOrder="@ViewData["currentOrder"]" asp-route-numPage="@i"
				   asp-route-currentFilter="@ViewData["CurrentFilter"]" class="custom-button btn @activePage" asp-route-optionStatus="@ViewData["Status"]"
				   asp-route-year="@ViewData["YearSelected"]" asp-route-registerCount="@ViewData["RegisterCount"]">@i</a>
			}

			if (endPage < totalPages)
			{
				if (endPage < totalPages - 1)
				{
					<span class="custom-button btn">...</span>
				}
				<a asp-action="Main" asp-route-sortOrder="@ViewData["currentOrder"]"
				   asp-route-numPage="@totalPages" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="custom-button btn"
				   asp-route-optionStatus="@ViewData["Status"]" asp-route-year="@ViewData["YearSelected"]"
				   asp-route-registerCount="@ViewData["RegisterCount"]">@totalPages</a>
			}
		}
		<a asp-action="Main" asp-route-sortOrder="@ViewData["CurrentOrder"]"
		   asp-route-numPage="@(Model.Requests.PageIndex + 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]"
		   class="custom-button btn @nextDisabled" asp-route-optionStatus="@ViewData["Status"]" asp-route-year="@ViewData["YearSelected"]"
		   asp-route-registerCount="@ViewData["RegisterCount"]">Next</a>
		@{
			int start = (Model.Requests.PageIndex - 1) * Model.PageSize + 1;
			int end = start + Model.PageSize - 1;
			if (end > Model.TotalRequest)
			{
				end = Model.TotalRequest;
			}
		}

		<span class="ms-3 custom-link">
			Showing @start...@end of @Model.TotalRequest requests
		</span>
	</div>
</div>

@section Scripts {
	@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
	<script type="text/javascript">
		$(document).ready(function () {
			$('#selectUser').change(function () {
				var selectedUser = $(this).val();
				if (selectedUser) {
					$.ajax({
						url: '@Url.Action("getYearsByUserId", "UserVacationDays")',
						data: { id: selectedUser },
						success: function (data) {
							console.log('success');
							var years = $('#selectYears');
							years.empty();
							$.each(data, function (i, item) {
								years.append($('<option>', { value: item.value, text: item.text }));
							});
						}
					});
				} else {
					$('#selectYears').empty();
				}
			});
		});
	</script>*@
	@if (TempData["toastMessage"] != null)
	{
		<script type="text/javascript">
			toastr.options = {
				closeButton: true,
				HTMLProgressElement: true,
				positionClass: 'toast-bottom-right',
				toastClass: 'toast'
			}
			toastr.success('@TempData["toastMessage"]');
		</script>
	}
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}
