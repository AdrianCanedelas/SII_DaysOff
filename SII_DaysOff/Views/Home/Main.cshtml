@using Microsoft.AspNetCore.Identity
@using SII_DaysOff.Areas.Identity.Data
@model IEnumerable<SII_DaysOff.Models.Requests>

@{
	ViewData["notShow"] = false;
	ViewData["title"] = "Main";
}

@inject UserManager<ApplicationUser> UserManager

@Html.Partial("../Components/ModalCreateRequest", new SII_DaysOff.Models.Requests())

<h1 class="mx-4">Days Off</h1>

<!-- Tabs para admin
<ul class="nav nav-tabs m-4">
	<li class="nav-item">
		<a class="nav-link active" aria-current="page" href="#">Active</a>
	</li>
	<li class="nav-item">
		<a class="nav-link" href="#">Register new user</a>
	</li>
	<li class="nav-item">
		<a class="nav-link" href="#">Register new reason</a>
	</li>
</ul>-->
<!-- Primer div con información de días disponibles, tomados... -->
<div class="card my-5 mx-4">
	<div class="card-header bg-light">
		<span>Time off balance in 2024</span>
	</div>
	<div class="card-body shadow">
		<div class="row text-center">
			<div class="col-6 col-sm-2">
				<p class="fw-bold">Annual leaves</p>
				<p>Holidays</p>
			</div>
			<div class="col-6 col-sm-2">
				<p class="fw-bold">Available days</p>
				<p>Holidays</p>
			</div>
			<div class="col-6 col-sm-2">
				<p class="fw-bold">Acquired days</p>
				<p>Holidays</p>
			</div>
			<div class="col-6 col-sm-2">
				<p class="fw-bold">Remaining days</p>
				<p>Holidays</p>
			</div>
			<div class="col-6 col-sm-2">
				<p class="fw-bold">Validity start date</p>
				<p>Holidays</p>
			</div>
			<div class="col-6 col-sm-2">
				<p class="fw-bold">Validity end date</p>
				<p>Holidays</p>
			</div>
		</div>
	</div>
</div>

<!-- Segundo div -->
<div class="card shadow my-4 mx-4">

	<!-- Parte superior con botón para iniciar solicitud nueva -->
	<div class="card-header bg-light">
		<div class="row">
			<div class="col-6 d-flex justify-content-start align-items-center">
				Requested time off
			</div>
			<div class="col-6 d-flex justify-content-end align-items-center">
				<!--
					data-bs-toggle="modal" data-bs-target="#exampleModal"
					asp-area="" asp-controller="Requests" asp-action="Create"
				-->
				@{
					var user = await UserManager.GetUserAsync(User);
				}
				<a class="btn btn-outline-primary fw-bold mx-2" asp-area="" asp-controller="Requests" asp-action="ManageIndex">Manage request</a>
				<button type="submit" class="btn btn-outline-primary fw-bold mx-2" data-bs-toggle="modal" data-bs-target="#exampleModal">New request</button>
				<!--<a class="btn btn-outline-primary fw-bold" asp-area="" asp-controller="Requests" asp-action="Index">View requests</a>-->
			</div>
		</div>
	</div>

	<!-- Tabs para admin -->
	<ul class="nav nav-tabs m-4">
		<li class="nav-item">
			<a class="nav-link" aria-current="page" asp-controller="Home" asp-action="Main" asp-route-optionStatus="Pending"><i class="bi bi-clock-history"></i>   Pending requests</a>
		</li>
		<li class="nav-item">
			<a class="nav-link" asp-controller="Home" asp-action="Main" asp-route-optionStatus="Approved"><i class="bi bi-check-circle"></i>   Approved requests</a>
		</li>
		<li class="nav-item">
			<a class="nav-link" asp-controller="Home" asp-action="Main" asp-route-optionStatus="Cancelled"><i class="bi bi-dash-circle"></i>   Cancelled requests</a>
		</li>
	</ul>

	<!-- Dropdown con las 3 opciones de visualización de solicictudes -->
	<div class="card-body cardRequests">
		<div class="row">
			<div class="col-auto">
				<!--<div class="dropdown">
					<button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenu" data-bs-toggle="dropdown">
						Type of request
					</button>
					<ul class="dropdown-menu" aria-labelledby="dropdownMenu">
						<li><a class="dropdown-item" href="#">Pending requests</a></li>
						<li><hr class="dropdown-divider"></li>
						<li><a class="dropdown-item" href="#">Approved requests</a></li>
						<li><hr class="dropdown-divider"></li>
						<li><a class="dropdown-item" href="#">Cancelled request</a></li>
					</ul>
				</div>-->
			</div>

			<!-- Aquí aparecerán las solicitudes -->
			<div class="col">
				<ul class="list-group ">
					<!--
						1. Motivo
						2. Día inicio
						3. Es medio día?
						4. Día fin
						5. Es medio día ?
						6. Días totales
						7. Día solicitud
						8. Estado
					-->
					<li class="list-group-item list-group-item-primary">
						<div class="row text-center">
							<div class="col fw-bold">
								Reason for the request
							</div>
							<div class="col fw-bold">
								Start day
							</div>
							<div class="col fw-bold">
								Is half day?
							</div>
							<div class="col fw-bold">
								End day
							</div>
							<div class="col fw-bold">
								Is half day?
							</div>
							<div class="col fw-bold">
								Total days
							</div>
							<div class="col fw-bold">
								Request day
							</div>
							<div class="col fw-bold">
								Status
							</div>
						</div>
					</li>

					<!-- Solicitudes -->
					@if (Model != null)
					{
						foreach (var item in Model)
						{
							<li class="list-group-item">
								<div class="row text-center">
									<div class="col">
									</div>
									<div class="col">
										@Html.DisplayFor(model => item.StartDate)
									</div>
									<div class="col">
										@Html.DisplayFor(model => item.HalfDayStart)
									</div>
									<div class="col">
										@Html.DisplayFor(model => item.EndDate)
									</div>
									<div class="col">
										@Html.DisplayFor(model => item.HalfDayEnd)
									</div>
									<div class="col">
									</div>
									<div class="col">
										@Html.DisplayFor(model => item.RequestDate)
									</div>
									<div class="col">
										@Html.DisplayFor(model => item.Status)
									</div>
								</div>
							</li>
						}
					}

					<!--<li class="list-group-item">
						<div class="row text-center">
							<div class="col">
								Vacations
							</div>
							<div class="col">
								13/05/2024
							</div>
							<div class="col">
								Is half day?
							</div>
							<div class="col">
								31/05/2024
							</div>
							<div class="col">
								Is half day?
							</div>
							<div class="col">
								15
							</div>
							<div class="col">
								10/05/2024
							</div>
							<div class="col">
								Pending
							</div>
						</div>
					</li>-->
				</ul>
			</div>
		</div>
	</div>

	<!-- Mensaje de solicitud enviada (toast) -->
	<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
		<div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
			<div class="toast-header">
				<img src="..." class="rounded me-2" alt="...">
				<strong class="me-auto">Request</strong>
				<small>now</small>
				<button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
			</div>
			<div class="toast-body">
				Your request has been sent
			</div>
		</div>
	</div>

</div>

<script>

	/* Modal enviar solicitud */

	/* Toast */
	/*document.getElementById('showToast').addEventListener('click', function () {
		var toast = document.getElementById('#liveToast');

		var bsToast = new bootstrap.Toast(toast);
		bsToast.show();
	});*/

	var option = {
		animation: true,
		delay: 2000
	};

	function Toasty() {
		var toastHTMLElement = document.getElementById("liveToast");

		var toastElement = new bootstrap.Toast(toastHTMLElement, option);

		toastElement.show();
	}

	/* NavBar requests */
	document.addEventListener("DOMContentLoaded", function () {
		var navLinks = document.querySelectorAll('.nav-link');

		navLinks.forEach(function (navLink) {
			console.log("1");
			navLink.addEventListener('click', function () {
				console.log("2");
				//event.preventDefault();
				navLinks.forEach(function (link) {
					console.log("3");
					link.classList.remove('active');
				});
				console.log("4");
				this.classList.add('active');
			});
		});
	});

</script>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}
